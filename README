Note: For a prettier version of this README please see the project page : http://rcythr.github.io/Honeydew

#General

__Version:__ 0.8.2

__Release date:__ 2014.03.10

__Project state:__ stable

__Author:__ Richard W. Laughlin Jr. (@rcythr)

***

This library allows a user to schedule tasks to be run on a collection of worker threads in a concurrent fashion. First a **Honeydew** implementation must be created and stored in a pointer somewhere. The default is a singleton located in the Honeydew library.
	
In general, Worker-agnostic tasks can be scheduled on:

1. The thread that completes the task. (**Worker Selection**)
2. The order in which the worker completes his tasks. (**Task Priority**)

However, Tasks which are tied to a particular worker thread can only be scheduled within the worker (**Task Priority**)

---------------------------------------------------------------------------------------------------
Currently there are four **Honeydew** implementations:
* __ROUND_ROBIN__
    - Worker selection is **round robin**
    - Tasks are strictly **FIFO**
* __ROUND_ROBIN_WITH_PRIORITY__
    - Worker selection is **round robin**
    - Tasks are reordered to **priority**
* __LEAST_BUSY__
    - Worker selection is onto the **least busy** worker
    - Tasks are strictly **FIFO**
* __LEAST_BUSY_WITH_PRIORITY__
    - Worker selection is onto the **least busy** worker
    - Tasks are reordered to **priority**

Each has benefits and drawbacks which are discussed in the **honeydew_type.hpp** file. The choice of implementation depends largely on the type of tasks you're processing and the rate at which they come in.

# Dependencies:

* **C++11 Standard Compliant Compiler** (Clang 3.1, GCC 4.8, Etc). Older versions than the above *may* work depending on compliance.
* **CMake 2.8** (for building from source)

# Installation Instructions

To simply build the library and include directories into a build folder, from command line:

    mkdir build
    cd build
    cmake ..
    make
    make install

The library will be in [PROJECT ROOT]/build/lib
The includes will be in [PROJECT ROOT]/build/include/
The test executables will bein [PROJECT ROOT]/build/bin

# Documentation

Documentation may be found in the associated **.hpp** files and in code.

# Changelog

+ **0.8.2** - Event System Helpers. CMake. Lots of stuff.
+ **0.6.0** - Pipeline implementation.
+ **0.5.0** - Basic implementation is complete with continuations and joins.
